// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msgsvc.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EchoRequest struct {
	Word                 string   `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoRequest) Reset()         { *m = EchoRequest{} }
func (m *EchoRequest) String() string { return proto.CompactTextString(m) }
func (*EchoRequest) ProtoMessage()    {}
func (*EchoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e27b078f1a5bc0d, []int{0}
}

func (m *EchoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoRequest.Unmarshal(m, b)
}
func (m *EchoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoRequest.Marshal(b, m, deterministic)
}
func (m *EchoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoRequest.Merge(m, src)
}
func (m *EchoRequest) XXX_Size() int {
	return xxx_messageInfo_EchoRequest.Size(m)
}
func (m *EchoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EchoRequest proto.InternalMessageInfo

func (m *EchoRequest) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

type EchoReply struct {
	Rs                   string   `protobuf:"bytes,2,opt,name=rs,proto3" json:"rs,omitempty"`
	Err                  string   `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoReply) Reset()         { *m = EchoReply{} }
func (m *EchoReply) String() string { return proto.CompactTextString(m) }
func (*EchoReply) ProtoMessage()    {}
func (*EchoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e27b078f1a5bc0d, []int{1}
}

func (m *EchoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoReply.Unmarshal(m, b)
}
func (m *EchoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoReply.Marshal(b, m, deterministic)
}
func (m *EchoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoReply.Merge(m, src)
}
func (m *EchoReply) XXX_Size() int {
	return xxx_messageInfo_EchoReply.Size(m)
}
func (m *EchoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoReply.DiscardUnknown(m)
}

var xxx_messageInfo_EchoReply proto.InternalMessageInfo

func (m *EchoReply) GetRs() string {
	if m != nil {
		return m.Rs
	}
	return ""
}

func (m *EchoReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type SayHelloRequest struct {
	Saidword             string   `protobuf:"bytes,1,opt,name=saidword,proto3" json:"saidword,omitempty"`
	Want                 string   `protobuf:"bytes,2,opt,name=want,proto3" json:"want,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SayHelloRequest) Reset()         { *m = SayHelloRequest{} }
func (m *SayHelloRequest) String() string { return proto.CompactTextString(m) }
func (*SayHelloRequest) ProtoMessage()    {}
func (*SayHelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e27b078f1a5bc0d, []int{2}
}

func (m *SayHelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SayHelloRequest.Unmarshal(m, b)
}
func (m *SayHelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SayHelloRequest.Marshal(b, m, deterministic)
}
func (m *SayHelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SayHelloRequest.Merge(m, src)
}
func (m *SayHelloRequest) XXX_Size() int {
	return xxx_messageInfo_SayHelloRequest.Size(m)
}
func (m *SayHelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SayHelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SayHelloRequest proto.InternalMessageInfo

func (m *SayHelloRequest) GetSaidword() string {
	if m != nil {
		return m.Saidword
	}
	return ""
}

func (m *SayHelloRequest) GetWant() string {
	if m != nil {
		return m.Want
	}
	return ""
}

type SayHelloReply struct {
	Rs                   string   `protobuf:"bytes,2,opt,name=rs,proto3" json:"rs,omitempty"`
	Err                  string   `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SayHelloReply) Reset()         { *m = SayHelloReply{} }
func (m *SayHelloReply) String() string { return proto.CompactTextString(m) }
func (*SayHelloReply) ProtoMessage()    {}
func (*SayHelloReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e27b078f1a5bc0d, []int{3}
}

func (m *SayHelloReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SayHelloReply.Unmarshal(m, b)
}
func (m *SayHelloReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SayHelloReply.Marshal(b, m, deterministic)
}
func (m *SayHelloReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SayHelloReply.Merge(m, src)
}
func (m *SayHelloReply) XXX_Size() int {
	return xxx_messageInfo_SayHelloReply.Size(m)
}
func (m *SayHelloReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SayHelloReply.DiscardUnknown(m)
}

var xxx_messageInfo_SayHelloReply proto.InternalMessageInfo

func (m *SayHelloReply) GetRs() string {
	if m != nil {
		return m.Rs
	}
	return ""
}

func (m *SayHelloReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*EchoRequest)(nil), "pb.EchoRequest")
	proto.RegisterType((*EchoReply)(nil), "pb.EchoReply")
	proto.RegisterType((*SayHelloRequest)(nil), "pb.SayHelloRequest")
	proto.RegisterType((*SayHelloReply)(nil), "pb.SayHelloReply")
}

func init() { proto.RegisterFile("msgsvc.proto", fileDescriptor_0e27b078f1a5bc0d) }

var fileDescriptor_0e27b078f1a5bc0d = []byte{
	// 205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xc9, 0x2d, 0x4e, 0x2f,
	0x2e, 0x4b, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x52, 0xe4, 0xe2,
	0x76, 0x4d, 0xce, 0xc8, 0x0f, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62, 0x29,
	0xcf, 0x2f, 0x4a, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x95, 0x74, 0xb9, 0x38,
	0x21, 0x4a, 0x0a, 0x72, 0x2a, 0x85, 0xf8, 0xb8, 0x98, 0x8a, 0x8a, 0x25, 0x98, 0xc0, 0xd2, 0x4c,
	0x45, 0xc5, 0x42, 0x02, 0x5c, 0xcc, 0xa9, 0x45, 0x45, 0x12, 0xcc, 0x60, 0x01, 0x10, 0x53, 0xc9,
	0x91, 0x8b, 0x3f, 0x38, 0xb1, 0xd2, 0x23, 0x35, 0x27, 0x07, 0x6e, 0xaa, 0x14, 0x17, 0x47, 0x71,
	0x62, 0x66, 0x0a, 0x92, 0xc9, 0x70, 0x3e, 0xd8, 0xc6, 0xc4, 0xbc, 0x12, 0xa8, 0x91, 0x60, 0xb6,
	0x92, 0x21, 0x17, 0x2f, 0xc2, 0x08, 0xa2, 0x6c, 0x35, 0xca, 0xe0, 0x62, 0xf3, 0x05, 0xfb, 0x4d,
	0x48, 0x83, 0x8b, 0x05, 0xe4, 0x5c, 0x21, 0x7e, 0xbd, 0x82, 0x24, 0x3d, 0x24, 0xbf, 0x49, 0xf1,
	0x22, 0x04, 0x0a, 0x72, 0x2a, 0x95, 0x18, 0x84, 0x4c, 0xb8, 0x38, 0x60, 0xd6, 0x08, 0x09, 0x83,
	0x24, 0xd1, 0xdc, 0x2d, 0x25, 0x88, 0x2a, 0x08, 0xd6, 0x95, 0xc4, 0x06, 0x0e, 0x3c, 0x63, 0x40,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x44, 0x23, 0x97, 0x24, 0x4c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgsvcClient is the client API for Msgsvc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgsvcClient interface {
	Echo(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoReply, error)
	SayHello(ctx context.Context, in *SayHelloRequest, opts ...grpc.CallOption) (*SayHelloReply, error)
}

type msgsvcClient struct {
	cc *grpc.ClientConn
}

func NewMsgsvcClient(cc *grpc.ClientConn) MsgsvcClient {
	return &msgsvcClient{cc}
}

func (c *msgsvcClient) Echo(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoReply, error) {
	out := new(EchoReply)
	err := c.cc.Invoke(ctx, "/pb.Msgsvc/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgsvcClient) SayHello(ctx context.Context, in *SayHelloRequest, opts ...grpc.CallOption) (*SayHelloReply, error) {
	out := new(SayHelloReply)
	err := c.cc.Invoke(ctx, "/pb.Msgsvc/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgsvcServer is the server API for Msgsvc service.
type MsgsvcServer interface {
	Echo(context.Context, *EchoRequest) (*EchoReply, error)
	SayHello(context.Context, *SayHelloRequest) (*SayHelloReply, error)
}

// UnimplementedMsgsvcServer can be embedded to have forward compatible implementations.
type UnimplementedMsgsvcServer struct {
}

func (*UnimplementedMsgsvcServer) Echo(ctx context.Context, req *EchoRequest) (*EchoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Echo not implemented")
}
func (*UnimplementedMsgsvcServer) SayHello(ctx context.Context, req *SayHelloRequest) (*SayHelloReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello not implemented")
}

func RegisterMsgsvcServer(s *grpc.Server, srv MsgsvcServer) {
	s.RegisterService(&_Msgsvc_serviceDesc, srv)
}

func _Msgsvc_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EchoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgsvcServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Msgsvc/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgsvcServer).Echo(ctx, req.(*EchoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msgsvc_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SayHelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgsvcServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Msgsvc/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgsvcServer).SayHello(ctx, req.(*SayHelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msgsvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Msgsvc",
	HandlerType: (*MsgsvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _Msgsvc_Echo_Handler,
		},
		{
			MethodName: "SayHello",
			Handler:    _Msgsvc_SayHello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "msgsvc.proto",
}
